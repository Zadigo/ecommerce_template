# Generated by Django 3.0.4 on 2020-06-30 20:35

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shop.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutomaticCollectionCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50)),
                ('condition', models.CharField(choices=[('is equal to', 'Is Equal To'), ('is not equal to', 'Is Not Equal To'), ('is greater than', 'Is Great Than'), ('is less than', 'Is Less Than'), ('starts with', 'Starts With'), ('ends with', 'Ends With'), ('contains', 'Contains'), ('does not contain', 'Does Not Contain'), ('yes', 'Yes'), ('no', 'No')], default='is equal to', max_length=50)),
                ('value', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_id', models.CharField(max_length=80)),
                ('price_ht', models.DecimalField(decimal_places=2, max_digits=5)),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('price_ttc', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('color', models.CharField(max_length=50)),
                ('size', models.CharField(blank=True, max_length=30, null=True, validators=[shop.validators.size_validator])),
                ('quantity', models.IntegerField(default=1, validators=[shop.validators.quantity_validator])),
                ('anonymous', models.BooleanField(default=False)),
                ('created_on', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_on', '-pk'],
            },
        ),
        migrations.CreateModel(
            name='ClotheSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3, validators=[shop.validators.size_validator])),
                ('verbose_name', models.CharField(max_length=50)),
                ('waist', models.IntegerField(default=0, verbose_name='waist width')),
                ('hip', models.IntegerField(default=0)),
                ('length', models.IntegerField(default=0)),
                ('thigh', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('femme', 'Femme'), ('homme', 'Homme')], default='femme', max_length=50)),
                ('view_name', models.CharField(max_length=50)),
                ('image', models.URLField(blank=True, null=True)),
                ('presentation_text', models.TextField(blank=True, max_length=300, null=True)),
                ('show_presentation', models.BooleanField(default=False)),
                ('automatic', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50)),
                ('transaction', models.CharField(default='76cc-d99ddcfb203c40baf8b9fd0016e6553d4284855ce013157fa90396600a54c440', max_length=200)),
                ('payment', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('accepted', models.BooleanField(default=False)),
                ('shipped', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('refund', models.BooleanField(default=False)),
                ('tracking_number', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery', models.CharField(choices=[('standard', 'Standard')], default='standard', max_length=50)),
                ('created_on', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_on', '-pk'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='NAW8762L', max_length=10)),
                ('value', models.IntegerField(default=5)),
                ('value_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed amount', 'Fixed Amount'), ('free shipping', 'Free Shipping')], default='percentage', max_length=50)),
                ('on_entire_order', models.BooleanField(default=False, help_text='Apply on an entire order')),
                ('minimum_purchase', models.IntegerField(default=0)),
                ('minimum_quantity', models.IntegerField(default=0)),
                ('usage_limit', models.IntegerField(default=0, help_text='Number of times a code can be used in total')),
                ('active', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_on', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('url', models.URLField(blank=True, null=True)),
                ('variant', models.CharField(default='Noir', max_length=30)),
                ('aws_key', models.CharField(blank=True, max_length=50, null=True, verbose_name='AWS folder key')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('main_image', models.BooleanField(default=False, help_text='Indicates if this is the main image for the product')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=50)),
                ('store_contact_email', models.EmailField(max_length=100)),
                ('customer_care_email', models.EmailField(max_length=100)),
                ('store_industry', models.CharField(choices=[('Fashion', 'Fashion'), ('clothing', 'Clothing'), ('jewelry', 'Jewelry')], default='Fashion', max_length=50)),
                ('legal_name', models.CharField(blank=True, max_length=50, null=True)),
                ('telephone', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=5, null=True)),
                ('store_currency', models.CharField(choices=[('eur', 'Eur'), ('dollars', 'Dollars')], default='eur', max_length=10)),
                ('tax_rate', models.IntegerField(default=20)),
                ('stripe_live_key', models.CharField(blank=True, max_length=100)),
                ('stripe_secret_key', models.CharField(blank=True, max_length=100)),
                ('amazon_pay_key', models.CharField(blank=True, max_length=100)),
                ('enable_amazon_pay', models.BooleanField(default=False)),
                ('enable_apple_pay', models.BooleanField(default=False)),
                ('enable_google_pay', models.BooleanField(default=False)),
                ('accounts_disabled', models.BooleanField(default=True, help_text='The user can purchase even if he has an account')),
                ('accounts_optional', models.BooleanField(default=True, help_text='The user can purchase either as a registered or anonymous user')),
                ('mobile_banner', models.BooleanField(default=False, help_text='Show the mobile top banner')),
                ('nav_banner', models.BooleanField(default=False, help_text='Show the banner just below the navigation bar')),
                ('automatic_archive', models.BooleanField(default=False, help_text='Archive an order automatically after it has been fulfilled and paid')),
                ('google_analytics_tag', models.CharField(blank=True, max_length=50, null=True)),
                ('google_tag_manager_tag', models.CharField(blank=True, max_length=50, null=True)),
                ('google_optimize_tag', models.CharField(blank=True, max_length=50, null=True)),
                ('google_ads_tag', models.CharField(blank=True, max_length=50, null=True)),
                ('facebook_pixels_tag', models.CharField(blank=True, max_length=50, null=True)),
                ('mailchimp_tag', models.CharField(blank=True, max_length=50, null=True)),
                ('allow_coupons', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('customer_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.CustomerOrder')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=1)),
                ('text', models.TextField(max_length=300)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('customer_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.CustomerOrder')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('reference', models.CharField(default='WN426007171C29', max_length=30)),
                ('gender', models.CharField(choices=[('femme', 'Femme'), ('homme', 'Homme')], default='femme', max_length=50)),
                ('description', models.TextField(blank=True, max_length=280, null=True)),
                ('price_ht', models.DecimalField(decimal_places=2, max_digits=5)),
                ('discount_pct', models.IntegerField(blank=True, default=10)),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('price_valid_until', models.DateField(default=datetime.date(2020, 7, 30))),
                ('quantity', models.IntegerField(blank=True, default=0)),
                ('sku', models.CharField(blank=True, help_text='ex. BCLOGO-GRIS-SMA', max_length=50, null=True)),
                ('google_category', models.CharField(choices=[('5424', 'Skirts'), ('212', 'Tops'), ('207', 'Shorts'), ('2271', 'Dresses'), ('214', 'Bras'), ('178', 'Accessories'), ('7366', 'Flyingtoyaccessories')], default='212', max_length=5)),
                ('in_stock', models.BooleanField(default=True)),
                ('discounted', models.BooleanField(default=False)),
                ('our_favorite', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('slug', models.SlugField()),
                ('last_modified', models.DateField(auto_now=True)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('clothe_size', models.ManyToManyField(blank=True, to='shop.ClotheSize')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shop.Collection')),
                ('images', models.ManyToManyField(to='shop.Image')),
            ],
            options={
                'ordering': ['-created_on', '-pk'],
            },
        ),
        migrations.CreateModel(
            name='LookBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('create_on', models.DateField(default=django.utils.timezone.now)),
                ('products', models.ManyToManyField(to='shop.Product')),
            ],
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['url'], name='shop_image_url_972fe2_idx'),
        ),
        migrations.AddField(
            model_name='discount',
            name='collection',
            field=models.ManyToManyField(blank=True, help_text='Apply on an entire collection', to='shop.Collection'),
        ),
        migrations.AddField(
            model_name='discount',
            name='product',
            field=models.ForeignKey(blank=True, help_text='Apply on a specific product', null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Product'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='cart',
            field=models.ManyToManyField(blank=True, to='shop.Cart'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='criterion',
            field=models.ManyToManyField(to='shop.AutomaticCollectionCriteria'),
        ),
        migrations.AddField(
            model_name='collection',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Store'),
        ),
        migrations.AddIndex(
            model_name='clothesize',
            index=models.Index(fields=['name'], name='shop_clothe_name_bca552_idx'),
        ),
        migrations.AddField(
            model_name='cart',
            name='coupon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Discount'),
        ),
        migrations.AddField(
            model_name='cart',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Product'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['reference', 'collection', 'name'], name='shop_produc_referen_cd33b7_idx'),
        ),
        migrations.AddIndex(
            model_name='customerorder',
            index=models.Index(fields=['payment'], name='shop_custom_payment_49b892_idx'),
        ),
        migrations.AddIndex(
            model_name='cart',
            index=models.Index(fields=['price_ht', 'quantity'], name='shop_cart_price_h_37ab93_idx'),
        ),
    ]
